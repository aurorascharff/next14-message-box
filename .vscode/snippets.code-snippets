{
	"messageState": {
		"scope": "typescript",
		"prefix": "messageState",
		"body": [
			"type State = {",
			"\tsuccess: boolean;",
			"\terror?: string;",
			"\ttimestamp?: Date;",
			"}",
			"$0"
		],
		"description": "Define a TypeScript initial state type"
	},
	"noscriptError": {
		"scope": "typescriptreact",
		"prefix": "noscriptError",
		"body": [
			"<noscript className=\"justify-self-end px-6 pb-3 text-red-600\">{${1:state.error}}</noscript>"
		],
	},
	"newMessageListener": {
		"scope": "typescriptreact",
		"prefix": "newMessageListener",
		"body": [
			"'use client';",
			"",
			"import React, { useEffect, useRef } from 'react';",
			"",
			"type Props = {",
			"  children: React.ReactNode;",
			"};",
			"",
			"export default function NewMessageListener({ children }: Props) {",
			"  const messagesRef = useRef<null | HTMLDivElement>(null);",
			"",
			"  useEffect(() => {",
			"    if (messagesRef) {",
			"      messagesRef.current?.addEventListener('DOMNodeInserted', event => {",
			"        const { currentTarget: target } = event;",
			"        if (target instanceof HTMLElement) {",
			"          target.scroll({ behavior: 'smooth', top: target.scrollHeight });",
			"        }",
			"      });",
			"    }",
			"  }, []);",
			"",
			"  return (",
			"    <div ref={messagesRef} className=\"grid h-64 gap-4 overflow-auto p-4\">",
			"      {children}",
			"    </div>",
			"  );",
			"}"
		],
	},
}